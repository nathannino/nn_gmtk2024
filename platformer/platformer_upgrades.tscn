[gd_scene load_steps=5 format=3 uid="uid://b1cqls1mwe8lq"]

[ext_resource type="Texture2D" uid="uid://dqfvobsua2xan" path="res://pixelmora/ressource.png" id="1_e7ymc"]
[ext_resource type="Texture2D" uid="uid://cike204gxgneq" path="res://pixelmora/recepie.png" id="2_5ec35"]

[sub_resource type="GDScript" id="GDScript_vnr1i"]
script/source = "@tool
extends Area2D

enum unlock_thingy {TOOL,RECEPIE}

@export var tool_unlock : gmtk_overworld_tool
@export var recepie_unlock : gmtk_crafting_recipes
@export var unlock_type : unlock_thingy

signal add_tool(unlock :gmtk_overworld_tool)
signal add_recepie(unlock :gmtk_crafting_recipes)

func _ready():
	if Engine.is_editor_hint() :
		return
	reset_values()
	pass # Replace with function body.

func _get_correct_sprite() :
	if unlock_type == unlock_thingy.TOOL and not tool_unlock == null :
		return tool_unlock.sprite
	if not recepie_unlock == null :
		return recepie_unlock.result.shop_sprite
	return preload(\"res://pixelmora/ressource.png\")

func reset_values():
	if not tool_unlock == null or not recepie_unlock == null :
		$Sprite2D.texture = _get_correct_sprite()
	if unlock_type == unlock_thingy.TOOL :
		$Sprite2D2.hide()
	else :
		$Sprite2D2.show()
	
func _process(delta):
	if Engine.is_editor_hint():
		reset_values()
	pass

func unlock() :
	if unlock_type == unlock_thingy.TOOL :
		add_tool.emit(tool_unlock)
	else :
		add_recepie.emit(recepie_unlock)
	queue_free()

func _on_body_entered(body):
	if not body is CharacterBody2D :
		return
	unlock()
	pass # Replace with function body.
"

[sub_resource type="CircleShape2D" id="CircleShape2D_kmyta"]
radius = 12.0

[node name="platformer_upgrades" type="Area2D"]
script = SubResource("GDScript_vnr1i")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_e7ymc")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_kmyta")

[node name="Sprite2D2" type="Sprite2D" parent="."]
visible = false
position = Vector2(0, 2)
texture = ExtResource("2_5ec35")

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
